<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:r="http://www.rabbitmq.com/namespaces/ad-hoc/conformance"
      xmlns:x="http://www.rabbitmq.com/2011/extensions"
      xmlns:xi="http://www.w3.org/2003/XInclude">
  <head>
    <title>Installing on Debian and Ubuntu</title>
  </head>
  <body>
    <doc:section name="overview">
       <doc:heading>Overview</doc:heading>

       <p>
         This guide covers RabbitMQ installation on Debian, Ubuntu and distributions based on one of them.
       </p>

       <p>
         <code>rabbitmq-server</code> is included in standard Debian
         and Ubuntu repositories. However, the versions included are
         usually months or even years behind <a href="/changelog.html">latest RabbitMQ releases</a>.
         RabbitMQ release artifacts include a Debian package. Team RabbitMQ also maintains our own <a href="#apt">apt repositories</a>.
       </p>

       <p>
         Main topics covered in this guide are

         <ul>
           <li><a href="#installation-methods">Ways of installing</a> the latest RabbitMQ version on Debian and Ubuntu</li>
           <li>How to <a href="#apt">install RabbitMQ using apt</a> from <a href="#apt-bintray">Bintray</a> or <a href="#apt-packagecloud">Package Cloud</a></li>
           <li>How to <a href="#erlang-repositories">install a recent supported Erlang version using apt</a></li>
           <li><a href="#apt-pinning">Version Pinning</a></li>
           <li><a href="#package-dependencies">Package dependencies</a></li>
           <li><a href="#supported-debian-distributions">Supported distributions</a></li>
           <li><a href="#sudo-requirements">Privilege requirements</a></li>
           <li><a href="#manual-installation">Direct download</a> from GitHub</li>
           <li>How to <a href="#managing-service">manage the service</a></li>
           <li>How to <a href="#server-logs">inspect node and service logs</a></li>
         </ul>

         and more.
       </p>
   </doc:section>

    <doc:section name="installation-methods">
       <doc:heading>How to Install Latest RabbitMQ on Debian and Ubuntu</doc:heading>

       <p>
         There are two ways to install the most recent version of RabbitMQ on Debian and Ubuntu:

         <ul>
           <li>Using an <a href="#apt">apt repository on Package Cloud or Bintray</a> (this option is highly recommended)</li>
           <li>
             Downloading the package and <a href="#manual-installation">installing it manually</a> with <code>dpkg -i</code>.
             This option will require manual installation of all <a href="#package-dependencies">package dependencies</a>.
           </li>
         </ul>

         This guide covers both options. In both cases, a supported version of Erlang has to be installed.
         On Debian and Ubuntu, the easiest way to do that is <a href="#erlang-repositories">via apt</a>.
       </p>
   </doc:section>

   <doc:section name="supported-debian-distributions">
       <doc:heading>Supported Distributions</doc:heading>

       <p>
         Below is a list Debian-based distributions supported by recent RabbitMQ releases:
         <ul>
           <li>Ubuntu 14.04 through 18.10</li>
           <li>Debian Buster</li>
           <li>Debian Stretch</li>
           <li>Debian Jessie</li>
         </ul>

         The package may work on other Debian-based distributions
         if dependencies (see below) are satisfied (e.g. using the
         Wheezy backports repository) but their testing and support
         is done on a best effort basis.
       </p>
   </doc:section>

   <doc:section name="erlang-repositories">
     <doc:heading>Where to Get Recent Erlang Version on Debian and Ubuntu</doc:heading>
     <p>
       RabbitMQ needs Erlang/OTP to run. Erlang/OTP packages in
       standard Debian and Ubuntu repositories can be significantly out of date
       and not <a href="/which-erlang.html">supported by modern RabbitMQ versions</a>.
     </p>

     <p>
       Most recent Erlang/OTP release series are available from a number of alternative
       apt repositories:
     </p>

     <table>
       <thead>
         <tr>
           <td><strong>Erlang Release Series</strong></td>
           <td><strong>Repositories that provide it</strong></td>
           <td><strong>Notes</strong></td>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td>21.x</td>
           <td>
             <ul>
               <li><a href="#apt-bintray-erlang">Debian packages of Erlang</a> by Team RabbitMQ</li>
               <li><a href="https://packages.debian.org/buster/erlang">Debian Buster</a></li>
               <li><a href="https://packages.erlang-solutions.com/erlang/#tabs-debian">Erlang Solutions</a> (not all patch releases are available)</li>
             </ul>
           </td>
           <td>
             <strong>Supported <a href="https://groups.google.com/forum/#!msg/rabbitmq-users/KbOldePfgYw/cjYzldEJAQAJ">starting with 3.7.7</a></strong>. See <a href="/which-erlang.html">Erlang compatibility guide</a>.
           </td>
         </tr>
         <tr>
           <td>20.x</td>
           <td>
             <ul>
               <li><a href="#apt-bintray-erlang">Debian packages of Erlang</a> by Team RabbitMQ</li>
               <li><a href="https://packages.debian.org/buster/erlang">Debian Buster</a></li>
               <li><a href="https://packages.erlang-solutions.com/erlang/#tabs-debian">Erlang Solutions</a> (not all patch releases are available)</li>
             </ul>
           </td>
           <td>
             <strong>Supported <a href="https://groups.google.com/forum/#!topic/rabbitmq-users/_imbAavBYjY">starting with 3.6.11</a></strong>. See <a href="/which-erlang.html">Erlang compatibility guide</a>.
           </td>
         </tr>
       </tbody>
     </table>

     <p>
       This guide will focus on the first option.
     </p>
   </doc:section>


   <doc:section name="apt-bintray-erlang">
     <doc:heading>Install Erlang from an Apt Repostory on Bintray</doc:heading>

     <p>
       Standard Debian and Ubuntu repositories tend to provide outdated versions of Erlang/OTP. Team RabbitMQ maintains
       an apt repository that includes <a href="https://bintray.com/rabbitmq-erlang/debian/erlang/">packages of modern Erlang/OTP releases</a> for
       a number of commonly used Debian and Ubuntu distributions:

       <ul>
         <li>Ubuntu 18.04 (Bionic)</li>
         <li>Ubuntu 16.04 (Xenial)</li>
         <li>Debian Stretch</li>
         <li>Debian Jessie</li>
       </ul>
     </p>

     <p>
       The repo provides most recent patch releases in the following Erlang series:

       <ul>
         <li>22.x</li>
         <li>21.x</li>
         <li>20.3.x</li>
         <li>19.3.x</li>
         <li>master (22.x)</li>
         <li>R16B03 (16.x)</li>
       </ul>
     </p>

     <p>
       In order to use the repository, it is necessary to

       <ul>
         <li>Add (import) repository signing key. <code>apt</code> will verify package signatures during installation.</li>
         <li>Add a source list file for the repository</li>
         <li>Update package metadata</li>
         <li>Install Erlang packages required by RabbitMQ</li>
       </ul>
     </p>

     <doc:subsection name="erlang-apt-repo-signing-key">
       <doc:heading>Add Repository Signing Key</doc:heading>

       <p>
         In order to use the repository, add <a href="/signatures.html">RabbitMQ signing key</a> to <code>apt-key</code>:

<pre class="lang-bash">
sudo apt-key adv --keyserver "hkps.pool.sks-keyservers.net" --recv-keys "0x6B73A36E6026DFCA"
</pre>

         The key can be downloaded and imported without involving a key server:

<pre class="lang-bash">
wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
</pre>

         This will instruct apt to trust packages signed by that key.
       </p>
     </doc:subsection>

     <doc:subsection name="erlang-apt-https-transport">
      <doc:heading>Enable apt HTTPS Transport</doc:heading>
       <p>
        In order for apt to be able to download RabbitMQ and Erlang packages from Bintray, the <code>apt-transport-https</code> package must be installed:

<pre class="lang-bash">
sudo apt-get install apt-transport-https
</pre>
       </p>
     </doc:subsection>

     <doc:subsection name="erlang-source-list-file">
       <doc:heading>Add a Source List File</doc:heading>

       <p>
         As with all 3rd party Apt (Debian) repositories, a file describing the repository
         must be placed under the <code>/etc/apt/sources.list.d/</code> directory.
         <code>/etc/apt/sources.list.d/bintray.erlang.list</code> is the recommended location.

         The file should have a source (repository) definition line that uses the following
         pattern:

<pre class="sourcecode">
# This repository provides RabbitMQ packages
# See below for supported distribution and component values
deb https://dl.bintray.com/rabbitmq/debian $distribution $component
</pre>

         The next couple of sections discuss what distribution and component values
         are supported.
       </p>

       <h4>Distribution</h4>

       <p>
         In order to set up an apt repository that provides the correct package, a few
         decisions have to be made. One is determining the distribution name. It comes
         from the Debian or Ubuntu release used:

         <ul>
           <li><code>bionic</code> for Ubuntu 18.04</li>
           <li><code>xenial</code> for Ubuntu 16.04</li>
           <li><code>stretch</code> for Debian Stretch</li>
           <li><code>jessie</code> for Debian Jessie</li>
         </ul>
       </p>

       <h4>Erlang/OTP Version</h4>

       <p>
         Another is what Erlang/OTP release version should be provisioned. It is possible to track
         a specific series (e.g. <code>21.x</code>) or install the most recent version available. The choice
         determines what Debian repository <code>component</code> will be configured.

         Consider the following repository file at <code>/etc/apt/sources.list.d/bintray.erlang.list</code>:

<pre class="sourcecode">
# Installs the latest 21.x version available in the repository.
deb http://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-21.x
</pre>

         It configures apt to install the most recent Erlang 21.x version available in the
         repository and use packages for Ubuntu 18.04 (Bionic).
       </p>

       <p>
         For Debian Stretch the file would look like this:

<pre class="sourcecode">
# Installs the latest 21.x version available in the repository.
deb http://dl.bintray.com/rabbitmq-erlang/debian stretch erlang-21.x
</pre>

         To use the most recent <code>20.x</code> patch release available, switch the component
         to <code>erlang-20.x</code>:

<pre class="sourcecode">
# Installs the latest 20.x version available in the repository.
deb http://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-20.x
</pre>

         <code>erlang-21.x</code>, <code>erlang-19.x</code>, and <code>erlang-16.x</code> are the components for Erlang 21.x,
         19.x and R16B03, respectively.
       </p>

       <p>
         The <code>erlang</code> component installs the most recent version available:

<pre class="sourcecode">
# Installs the latest version available in the repository.
# Consider using version pinning.
deb http://dl.bintray.com/rabbitmq-erlang/debian bionic erlang
</pre>

         That version may or may not
         be supported by RabbitMQ, so <a href="#apt-pinning">version pinning</a> is highly recommended.
       </p>
     </doc:subsection>

     <doc:subsection name="installing-erlang-package">
       <doc:heading>Install Erlang Packages</doc:heading>

       After updating the list of <code>apt</code> sources it is necessary to run <code>apt-get update</code>:

<pre class="sourcecode ini">
sudo apt-get update -y
</pre>

Then packages can be installed just like with the standard Debian repositories:

<pre class="sourcecode ini">
# This is recommended. Metapackages such as erlang and erlang-nox must only be used
# with apt version pinning. They do not pin their dependency versions.
sudo apt-get install -y erlang-base \
                        erlang-asn1 erlang-crypto erlang-eldap erlang-ftp erlang-inets \
                        erlang-mnesia erlang-os-mon erlang-parsetools erlang-public-key \
                        erlang-runtime-tools erlang-snmp erlang-ssl \
                        erlang-syntax-tools erlang-tftp erlang-tools erlang-xmerl
</pre>
     </doc:subsection>

     <doc:subsection name="apt-pinning">
       <doc:heading>Erlang Version and Repository Pinning</doc:heading>

       <p>
         When the same package (e.g. <code>erlang-base</code>) is available from multiple apt repositories operators need
         to have a way to indicate what repository should be preferred. It may also be desired to restrict Erlang version to avoid undesired upgrades.
         <a href="https://wiki.debian.org/AptPreferences">apt package pinning</a> can be used to address both problems.
       </p>

       <p>
         Package pinning is configured with a file placed under the <code>/etc/apt/preferences.d/</code> directory, e.g. <code>/etc/apt/preferences.d/erlang</code>.
         After updating apt preferences it is necessary to run <code>apt-get update</code>:

<pre class="sourcecode">
sudo apt-get update
</pre>
       </p>

       <p>
         The following preference file example will configure <code>apt</code> to install <code>erlang-*</code> packages from Bintray
         and not standard Debian or Ubuntu repository:

<pre class="lang-ini">
# /etc/apt/preferences.d/erlang
Package: erlang*
Pin: release o=Bintray
Pin-Priority: 1000
</pre>

         This apt preference configuration is recommended when the <code>erlang</code> <a href="#erlang-source-list-file">repository component is used</a>.
       </p>

       <p>
         Effective package pinning policy can be verified with

<pre class="sourcecode">
sudo apt-cache policy
</pre>
       </p>

       <p>
         The following preference file example will pin all <code>erlang-*</code> packages to <code>21.3.2</code>
         (assuming <a href="https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version">package epoch</a> for the package is 1):

<pre class="lang-ini">
# /etc/apt/preferences.d/erlang
Package: erlang*
Pin: version 1:21.3.2-1
Pin-Priority: 1000
</pre>

         The following preference file example will pin <code>esl-erlang</code> package to to <code>20.3.8.20</code>
         (assuming <a href="https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version">package epoch</a> for the package is 1):

<pre class="lang-ini">
# /etc/apt/preferences.d/erlang
Package: esl-erlang
Pin: version 1:20.3.8.20
Pin-Priority: 1000
</pre>
       </p>
     </doc:subsection>
   </doc:section>


   <doc:section name="apt">
    <doc:heading>Using RabbitMQ Apt Repositories</doc:heading>

     <p>
       RabbitMQ packages can be installed from apt (Debian) repositories on <a href="https://packagecloud.io/rabbitmq/rabbitmq-server">Package Cloud</a>
       or <a href="https://bintray.com/rabbitmq/debian/rabbitmq-server">Bintray</a>. Both repositories provide packages
       for most recent RabbitMQ releases.
     </p>

     <p>
       PackageCloud provides a more opinionated and automated way of repository setup. With Bintray
       the experience is closer to setting up any other 3rd party apt repository.
     </p>

     <doc:subsection name="apt-packagecloud">
        <doc:heading>Using RabbitMQ Apt Repository on PackageCloud</doc:heading>

        <p>
          PackageCloud is a package hosting service. Team RabbitMQ maintains an <a href="https://packagecloud.io/rabbitmq/rabbitmq-server">apt repository on PackageCloud</a>.

          A quick way to install uses a <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install#bash-deb">Package Cloud-provided script</a>.
        </p>

        <p>
          There are more installation options available:

          <ul>
            <li>Using PackageCloud Chef cookbook</li>
            <li>Using PackageCloud Puppet module</li>
            <li>Manually</li>
          </ul>

          <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install">PackageCloud RabbitMQ repository instructions</a> lists all available options.
        </p>

        <p>
          Package Cloud signs distributed packages using their own GPG keys.

<pre class="lang-bash">
# import PackageCloud signing key
wget -O - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo apt-key add -
</pre>
        </p>

        <p>
          After importing both keys please follow the <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install">Package Cloud repository
          setup instructions</a>.
        </p>
      </doc:subsection>


      <doc:subsection name="apt-bintray">
        <doc:heading>Using RabbitMQ Apt Repository on Bintray</doc:heading>

        <p>
          Bintray is a package distribution service. Team RabbitMQ maintains an <a href="https://bintray.com/rabbitmq/debian/rabbitmq-server">apt repository on Bintray</a>.
          When using the repository on Bintray it is recommended that Erlang/OTP is also <a href="#installing-erlang-package">installed from Bintray</a>.
        </p>

        <p>
         In order to use a 3rd apt repository, it is necessary to

         <ul>
           <li><a href="#erlang-apt-repo-signing-key">Add (import) repository signing key</a>. <code>apt</code> will verify package signatures during installation.</li>
           <li>Add a repository file</li>
           <li>Update package metadata</li>
           <li>Install the Erlang package</li>
         </ul>

         Below is shell snippet that performs those steps. They are documented in moroe detail below.

<pre class="lang-bash">
#!/bin/sh

## Install RabbitMQ signing key
sudo apt-key adv --keyserver "hkps.pool.sks-keyservers.net" --recv-keys "0x6B73A36E6026DFCA"

## Install apt HTTPS transport
sudo apt-get install apt-transport-https

## Add Bintray repositories that provision latest RabbitMQ and Erlang 21.x releases
sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list &lt;&lt;EOF
deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-21.x
deb https://dl.bintray.com/rabbitmq/debian bionic main
EOF

## Update package indices
sudo apt-get update -y

## Install rabbitmq-server and its dependencies
sudo apt-get install rabbitmq-server -y --fix-missing
</pre>
        </p>

        <h4>Add Signing Key</h4>
        <p>
          See <a href="#erlang-apt-repo-signing-key">Add Repository Signing Key</a> above.
        </p>

        <h4>Enable apt HTTPS Transport</h4>
        <p>
          See <a href="#erlang-apt-https-transport">Install apt HTTPS transport</a> above.
        </p>

        <h4>Add a Source List File</h4>
        <p>
          As with all 3rd party apt repositories, a file describing the RabbitMQ and Erlang package repositories
          must be placed under the <code>/etc/apt/sources.list.d/</code> directory.
          <code>/etc/apt/sources.list.d/bintray.rabbitmq.list</code> is the recommended location.

          The file should have a source (repository) definition line that uses the following
          pattern:

<pre class="sourcecode">
# Source repository definition example.
# See below for supported distribution and component values

# Use this line to install the latest Erlang 21.3.x package available
deb https://dl.bintray.com/rabbitmq-erlang/debian $distribution erlang-21.x

# Or use this line to install the latest Erlang 22.x package available
# deb https://dl.bintray.com/rabbitmq-erlang/debian $distribution erlang

# This repository provides RabbitMQ packages
deb https://dl.bintray.com/rabbitmq/debian $distribution main
</pre>

          The next couple of sections discusses what distribution and component values
          are supported.
       </p>

       <h4>Distribution</h4>
       <p>
         In order to set up an apt repository that provides the correct package, a few
         decisions have to be made. One is determining the distribution name. It comes
         from the Debian or Ubuntu release used:

         <ul>
           <li>bionic (Ubuntu 18.04)</li>
           <li>artful</li>
           <li>trusty</li>
           <li>sid</li>
           <li>buster</li>
           <li>stretch</li>
           <li>jessie</li>
           <li>xenial (Ubuntu 16.04)</li>
           <li>yakkety</li>
           <li>zesty</li>
         </ul>
       </p>

       <p>
         To add the apt repository to the source list directory (<code>/etc/apt/sources.list.d</code>), use:
<pre class="lang-bash">
echo "deb https://dl.bintray.com/rabbitmq/debian {distribution} main" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list
</pre>

         where <code>{distribution}</code> is the name of the Debian or Ubuntu distribution used (see above).
       </p>
       <p>
         So, on Ubuntu 18.04 the above command becomes

<pre class="lang-bash">
echo "deb https://dl.bintray.com/rabbitmq/debian bionic main" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list
</pre>

         and on Ubuntu 16.04 it would be

<pre class="lang-bash">
echo "deb https://dl.bintray.com/rabbitmq/debian xenial main" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list
</pre>
       </p>

       <p>
         It is possible to list multiple repositories, for example, one that provides RabbitMQ and one that <a href="#erlang-repositories">provides Erlang/OTP packages</a>.
         On Ubuntu 18.04 that can be done by modifying the command in the above example like so:

<pre class="lang-bash">
sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list &lt;&lt;EOF
deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-21.x
deb https://dl.bintray.com/rabbitmq/debian bionic main
EOF
</pre>

         and on Ubuntu 16.04 it would be

<pre class="lang-bash">
sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list &lt;&lt;EOF
deb https://dl.bintray.com/rabbitmq-erlang/debian xenial erlang-21.x
deb https://dl.bintray.com/rabbitmq/debian xenial main
EOF
</pre>
       </p>

       <h4>Install RabbitMQ Package</h4>
       <p>
         After updating the list of <code>apt</code> sources it is necessary to run <code>apt-get update</code>:

<pre class="sourcecode">
sudo apt-get update -y
</pre>

        Then install the package with

<pre class="sourcecode">
sudo apt-get install -y rabbitmq-server
</pre>
       </p>
     </doc:subsection>
   </doc:section>


   <doc:section name="manual-installation">
     <doc:heading>Manual Installation with Dpkg</doc:heading>

     <p>
       In some cases it may easier to download the package directly from GitHub and install it manually using <code>sudo dpkg -i</code>.
       Below is a download link.
     </p>

     <r:downloads signature="yes">
       <r:download signature="no" absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server_&version-server;-&serverDebMinorVersion;_all.deb"
                   downloadfile="rabbitmq-server_&version-server;-&serverDebMinorVersion;_all.deb">
         .deb for Debian-based Linux (from <a href="https://github.com/rabbitmq/rabbitmq-server/releases">GitHub</a>)
       </r:download>
     </r:downloads>

     <p>
       When installing manually with <code>dpkg</code>, it is necessary to install package dependencies first.
       <code>dpkg</code>, unlike <code>apt</code>, does not resolve or manage dependencies.

       Here's an example that does that, installs <code>wget</code>, downloads the RabbitMQ package and installs it:

<pre class="lang-bash">
# sync package metadata
sudo apt-get update
# install dependencies manually
sudo apt-get -y install socat logrotate init-system-helpers adduser

# download the package
sudo apt-get -y install wget
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server_&version-server;-&serverDebMinorVersion;_all.deb

# install the package with dpkg
sudo dpkg -i rabbitmq-server_&version-server;-&serverDebMinorVersion;_all.deb

rm rabbitmq-server_&version-server;-&serverDebMinorVersion;_all.deb
</pre>
     </p>

     <p>
       Installation via <a href="#apt">apt repositories</a> on Bintray and Package Cloud is recommended
       over downloading the package directly and installing via <code>dpkg -i</code>. When the RabbitMQ
       package is installed manually with <code>dpkg -i</code> the operator is responsible for making sure
       that all <a href="#package-dependencies">package dependencies</a> are met.
     </p>
   </doc:section>


   <doc:section name="sudo-requirements">
       <doc:heading>User Privilege Requirements</doc:heading>

       <p>
         RabbitMQ Debian package will require <code>sudo</code> privileges to install and manage.
         In environments where <code>sudo</code> isn't available, consider using the
         <a href="/install-generic-unix.html">generic binary build</a> instead.
       </p>
   </doc:section>


   <doc:section name="running-debian">
     <doc:heading>Run RabbitMQ Server</doc:heading>

     <h3>Start the Server</h3>
     <p>
       The server is started as a daemon by default when the
       RabbitMQ server package is installed. It will run as a non-privileged user <code>rabbitmq</code>.
     </p>
     <p>
       As an administrator, start and stop the
       server as usual for Debian-based systems:
       <code>service rabbitmq-server start</code>.
     </p>
   </doc:section>

   <doc:section name="configuration-debian">
     <doc:heading>Configuring RabbitMQ</doc:heading>
     <p>
       On most systems, a node should be able to start and run with all defaults.
       Please refer to the <a href="configure.html">Configuration guide</a> to learn more
       and <a href="/production-checklist.html">Production Checklist</a> for guidelines beyond
       development environments.
     </p>
     <p>
       <em>Note: </em>The server is set up to run as system user
       <code>rabbitmq</code>.
       If you change the location of the node database or the logs,
       you must ensure the files are owned by this user
       (and also update the environment variables).
     </p>
   </doc:section>

    <xi:include href="install-selinux-ports.xml.inc"/>
    <xi:include href="install-guest-localhost.xml.inc"/>

    <doc:section name="kernel-resource-limits">
      <doc:heading>Controlling System Limits on Linux</doc:heading>
      <xi:include href="max-open-files-limit-intro.xml.inc" />
      <xi:include href="max-open-files-limit-different-limits.xml.inc" />
      <xi:include href="max-open-files-limit-options-debian.xml.inc" />
      <xi:include href="max-open-files-limit-going-further-linux.xml.inc" />
      <xi:include href="max-open-files-limit-verifying-linux.xml.inc" />
      <xi:include href="max-open-files-limit-tools.xml.inc" />
    </doc:section>

    <xi:include href="install-unix-manage.xml.inc"/>
    <xi:include href="install-unix-logs.xml.inc"/>
  </body>
</html>
