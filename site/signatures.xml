<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2018 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Signatures</title>
  </head>
  <body>
    <p class="intro">
      This page describes the signing process used when building
      RabbitMQ release packages, and how to verify the signatures on
      downloaded releasee artifacts.
    </p>

    <doc:section name="signing-process">
      <p>
        RabbitMQ release artifacts, both binary and source,
        are signed using <a href="http://www.gnupg.org/">GnuPG</a> and <a href="https://www.rabbitmq.com/rabbitmq-release-signing-key.asc">our release signing key</a>.
      </p>
    </doc:section>

    <doc:section name="importing-gpg-key">
	     <doc:heading>Importing the Signing Key</doc:heading>
	     <p>
	        Before signatures can be verified, RabbitMQ <a href="https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc">signing key</a> must be downloaded.
           This can be done using the <a href="https://sks-keyservers.net/overview-of-pools.php">SKS keyservers pool</a>:

<pre class="sourcecode bash">gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys 0x6B73A36E6026DFCA</pre>
	     </p>

       <p>
         On Debian and Ubuntu systems, assuming that <a href="/install-debian.html">apt repositories</a> are used for installation,
         <code>apt-key</code> should be used:

<pre class="sourcecode bash">apt-key adv --keyserver hkps.pool.sks-keyservers.net --recv-keys 0x6B73A36E6026DFCA</pre>
       </p>

	     <p>
	        Alternatively the key can be downloaded directly from <a href="https://github.com/rabbitmq/signing-keys/releases/">signing key</a> or <a href="">Bintray</a>
          or <a href="https://www.rabbitmq.com/rabbitmq-release-signing-key.asc">rabbitmq.com</a>:
<pre class="sourcecode bash">
wget https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
gpg --import rabbitmq-release-signing-key.asc
</pre>
        </p>
      </doc:section>

      <doc:section name="checking-signatures">
	       <doc:heading>Verifying Signatures</doc:heading>
	       <p>
	          To check signatures for the packages, use <code>gpg --verify</code>:

<pre class="sourcecode bash">gpg --verify [filename].asc [filename]</pre>
	       </p>
      	 <p>
      	    Here's an example session, after having retrieved a RabbitMQ
      	    source archive and its associated detached signature from
      	    the download area:

<pre class="sourcecode bash">
gpg --verify rabbitmq-server_3.7.8-1_all.deb.asc rabbitmq-server_3.7.8-1_all.deb
gpg: Signature made Thu Sep 20 16:32:33 2018 BST
gpg:                using RSA key 6B73A36E6026DFCA
gpg: using subkey 0xEDF4AE3B59B046FA instead of primary key 0x6B73A36E6026DFCA
gpg: using PGP trust model
gpg: Good signature from "RabbitMQ Signing Key &lt;info@rabbitmq.com&gt;" [full]
Primary key fingerprint: 4E30 C634 2FB4 AF5C 6334  2330 79A1 D640 D80A 61F0
     Subkey fingerprint: 5EC4 26E8 A6F3 523D D924  8FC8 EDF4 AE3B 59B0 46FA
gpg: binary signature, digest algorithm SHA512
</pre>
      	 </p>
        <p>
	         If the signature is invalid, a "BAD signature"
	         message will be emitted. If that's the case the origin of the package,
           the signature file and the signing key should be carefully verified.
           Packages that fail signature verification must not be used.
	      </p>
        <p>
          If the signature is valid, you should expect a "Good
          signature" message; if you've not signed our key, you will
          see a "Good signature" message along with a warning about
          our key being untrusted.
        </p>
        <p>
	        If you trust the RabbitMQ signing key you avoid the warning output by
	        GnuPG by signing it using your own key (to create your private key run <code>gpg --gen-key</code>):

<pre class="sourcecode bash">gpg --sign-key 0x6B73A36E6026DFCA</pre>
        </p>
      </doc:section>
  </body>
</html>
